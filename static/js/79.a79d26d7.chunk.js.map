{"version":3,"sources":["../node_modules/codemirror/mode/pegjs/pegjs.js"],"names":["CodeMirror","defineMode","config","jsMode","getMode","identifier","stream","match","startState","inString","stringType","inComment","inCharacterClass","braced","lhs","localState","token","state","peek","next","eol","skipToEnd","text","current","i","length","indexOf","eatSpace","mod","require"],"mappings":"+GAUG,SAASA,GACZ,aAEAA,EAAWC,WAAW,SAAS,SAAUC,GACvC,IAAIC,EAASH,EAAWI,QAAQF,EAAQ,cAExC,SAASG,EAAWC,GAClB,OAAOA,EAAOC,MAAM,2BAGtB,MAAO,CACLC,WAAY,WACV,MAAO,CACLC,UAAU,EACVC,WAAY,KACZC,WAAW,EACXC,kBAAkB,EAClBC,OAAQ,EACRC,KAAK,EACLC,WAAY,OAGhBC,MAAO,SAAUV,EAAQW,GAcvB,GAbIX,IAGCW,EAAMR,UAAaQ,EAAMN,WAAgC,KAAjBL,EAAOY,QAAoC,KAAjBZ,EAAOY,SAC5ED,EAAMP,WAAaJ,EAAOY,OAC1BZ,EAAOa,OACPF,EAAMR,UAAW,IAEdQ,EAAMR,UAAaQ,EAAMN,YAAaL,EAAOC,MAAM,QACtDU,EAAMN,WAAY,GAIhBM,EAAMR,SAAU,CAClB,KAAOQ,EAAMR,WAAaH,EAAOc,OAC3Bd,EAAOY,SAAWD,EAAMP,YAC1BJ,EAAOa,OACPF,EAAMR,UAAW,GACU,OAAlBH,EAAOY,QAChBZ,EAAOa,OACPb,EAAOa,QAEPb,EAAOC,MAAM,gBAGjB,OAAOU,EAAMH,IAAM,kBAAoB,SAClC,GAAIG,EAAMN,UAAW,CAC1B,KAAOM,EAAMN,YAAcL,EAAOc,OAC5Bd,EAAOC,MAAM,MACfU,EAAMN,WAAY,EAElBL,EAAOC,MAAM,YAGjB,MAAO,UACF,GAAIU,EAAML,iBACb,KAAOK,EAAML,mBAAqBN,EAAOc,OACjCd,EAAOC,MAAM,cAAgBD,EAAOC,MAAM,UAC9CU,EAAML,kBAAmB,OAG1B,IAAsB,MAAlBN,EAAOY,OAGhB,OAFAZ,EAAOa,OACPF,EAAML,kBAAmB,EAClB,UACF,GAAIN,EAAOC,MAAM,MAEtB,OADAD,EAAOe,YACA,UACF,GAAIJ,EAAMJ,QAA4B,MAAlBP,EAAOY,OAAgB,CACvB,OAArBD,EAAMF,aACRE,EAAMF,WAAaf,EAAWQ,WAAWL,IAE3C,IAAIa,EAAQb,EAAOa,MAAMV,EAAQW,EAAMF,YACnCO,EAAOhB,EAAOiB,UAClB,IAAKP,EACH,IAAK,IAAIQ,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACf,MAAZF,EAAKE,GACPP,EAAMJ,SACe,MAAZS,EAAKE,IACdP,EAAMJ,SAIZ,OAAOG,EACF,GAAIX,EAAWC,GACpB,MAAsB,MAAlBA,EAAOY,OACF,WAEF,aACF,IAAoD,GAAhD,CAAC,IAAK,IAAK,IAAK,KAAKQ,QAAQpB,EAAOY,QAE7C,OADAZ,EAAOa,OACA,UACGb,EAAOqB,YACjBrB,EAAOa,OAET,OAAO,SAGV,cA1GCS,CAAIC,EAAQ,IAAyBA,EAAQ","file":"static/js/79.a79d26d7.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pegjs\", function (config) {\n  var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n  function identifier(stream) {\n    return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n  }\n\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: null,\n        inComment: false,\n        inCharacterClass: false,\n        braced: 0,\n        lhs: true,\n        localState: null\n      };\n    },\n    token: function (stream, state) {\n      if (stream)\n\n      //check for state changes\n      if (!state.inString && !state.inComment && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (!state.inString && !state.inComment && stream.match('/*')) {\n        state.inComment = true;\n      }\n\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inComment) {\n        while (state.inComment && !stream.eol()) {\n          if (stream.match('*/')) {\n            state.inComment = false; // Clear flag\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n        return \"comment\";\n      } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n      } else if (stream.peek() === '[') {\n        stream.next();\n        state.inCharacterClass = true;\n        return 'bracket';\n      } else if (stream.match('//')) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (state.braced || stream.peek() === '{') {\n        if (state.localState === null) {\n          state.localState = CodeMirror.startState(jsMode);\n        }\n        var token = jsMode.token(stream, state.localState);\n        var text = stream.current();\n        if (!token) {\n          for (var i = 0; i < text.length; i++) {\n            if (text[i] === '{') {\n              state.braced++;\n            } else if (text[i] === '}') {\n              state.braced--;\n            }\n          };\n        }\n        return token;\n      } else if (identifier(stream)) {\n        if (stream.peek() === ':') {\n          return 'variable';\n        }\n        return 'variable-2';\n      } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n        stream.next();\n        return 'bracket';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n}, \"javascript\");\n\n});\n"],"sourceRoot":""}