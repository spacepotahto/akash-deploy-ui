{"version":3,"sources":["../node_modules/codemirror/addon/mode/overlay.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/django/django.js"],"names":["CodeMirror","overlayMode","base","overlay","combine","startState","basePos","baseCur","overlayPos","overlayCur","streamSeen","copyState","state","token","stream","Math","min","start","pos","combineTokens","indent","textAfter","line","electricChars","innerMode","mode","blankLine","baseToken","overlayToken","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","sol","indentation","eatSpace","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","html","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local","keywords","filters","operators","wordOperators","tokenBase","inVariable","inComment","inString","delimiter","previousTokenizer","escapeNext","waitDot","peek","waitProperty","Error","waitPipe","waitFilter","foundVariable","keywordMatch","blockCommentTag","inBlockComment","skipToEnd","join","htmlBase","djangoInner"],"mappings":"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","file":"static/js/11.202ab387.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"django:inner\", function() {\n    var keywords = [\"block\", \"endblock\", \"for\", \"endfor\", \"true\", \"false\", \"filter\", \"endfilter\",\n                    \"loop\", \"none\", \"self\", \"super\", \"if\", \"elif\", \"endif\", \"as\", \"else\", \"import\",\n                    \"with\", \"endwith\", \"without\", \"context\", \"ifequal\", \"endifequal\", \"ifnotequal\",\n                    \"endifnotequal\", \"extends\", \"include\", \"load\", \"comment\", \"endcomment\",\n                    \"empty\", \"url\", \"static\", \"trans\", \"blocktrans\", \"endblocktrans\", \"now\",\n                    \"regroup\", \"lorem\", \"ifchanged\", \"endifchanged\", \"firstof\", \"debug\", \"cycle\",\n                    \"csrf_token\", \"autoescape\", \"endautoescape\", \"spaceless\", \"endspaceless\",\n                    \"ssi\", \"templatetag\", \"verbatim\", \"endverbatim\", \"widthratio\"],\n        filters = [\"add\", \"addslashes\", \"capfirst\", \"center\", \"cut\", \"date\",\n                   \"default\", \"default_if_none\", \"dictsort\",\n                   \"dictsortreversed\", \"divisibleby\", \"escape\", \"escapejs\",\n                   \"filesizeformat\", \"first\", \"floatformat\", \"force_escape\",\n                   \"get_digit\", \"iriencode\", \"join\", \"last\", \"length\",\n                   \"length_is\", \"linebreaks\", \"linebreaksbr\", \"linenumbers\",\n                   \"ljust\", \"lower\", \"make_list\", \"phone2numeric\", \"pluralize\",\n                   \"pprint\", \"random\", \"removetags\", \"rjust\", \"safe\",\n                   \"safeseq\", \"slice\", \"slugify\", \"stringformat\", \"striptags\",\n                   \"time\", \"timesince\", \"timeuntil\", \"title\", \"truncatechars\",\n                   \"truncatechars_html\", \"truncatewords\", \"truncatewords_html\",\n                   \"unordered_list\", \"upper\", \"urlencode\", \"urlize\",\n                   \"urlizetrunc\", \"wordcount\", \"wordwrap\", \"yesno\"],\n        operators = [\"==\", \"!=\", \"<\", \">\", \"<=\", \">=\"],\n        wordOperators = [\"in\", \"not\", \"or\", \"and\"];\n\n    keywords = new RegExp(\"^\\\\b(\" + keywords.join(\"|\") + \")\\\\b\");\n    filters = new RegExp(\"^\\\\b(\" + filters.join(\"|\") + \")\\\\b\");\n    operators = new RegExp(\"^\\\\b(\" + operators.join(\"|\") + \")\\\\b\");\n    wordOperators = new RegExp(\"^\\\\b(\" + wordOperators.join(\"|\") + \")\\\\b\");\n\n    // We have to return \"null\" instead of null, in order to avoid string\n    // styling as the default, when using Django templates inside HTML\n    // element attributes\n    function tokenBase (stream, state) {\n      // Attempt to identify a variable, template or comment tag respectively\n      if (stream.match(\"{{\")) {\n        state.tokenize = inVariable;\n        return \"tag\";\n      } else if (stream.match(\"{%\")) {\n        state.tokenize = inTag;\n        return \"tag\";\n      } else if (stream.match(\"{#\")) {\n        state.tokenize = inComment;\n        return \"comment\";\n      }\n\n      // Ignore completely any stream series that do not match the\n      // Django template opening tags.\n      while (stream.next() != null && !stream.match(/\\{[{%#]/, false)) {}\n      return null;\n    }\n\n    // A string can be included in either single or double quotes (this is\n    // the delimiter). Mark everything as a string until the start delimiter\n    // occurs again.\n    function inString (delimiter, previousTokenizer) {\n      return function (stream, state) {\n        if (!state.escapeNext && stream.eat(delimiter)) {\n          state.tokenize = previousTokenizer;\n        } else {\n          if (state.escapeNext) {\n            state.escapeNext = false;\n          }\n\n          var ch = stream.next();\n\n          // Take into account the backslash for escaping characters, such as\n          // the string delimiter.\n          if (ch == \"\\\\\") {\n            state.escapeNext = true;\n          }\n        }\n\n        return \"string\";\n      };\n    }\n\n    // Apply Django template variable syntax highlighting\n    function inVariable (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to find the variable\n      if (stream.match(/\\b(\\w+)\\b/) && !state.foundVariable) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"}}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        state.tokenize = tokenBase;\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    function inTag (stream, state) {\n      // Attempt to match a dot that precedes a property\n      if (state.waitDot) {\n        state.waitDot = false;\n\n        if (stream.peek() != \".\") {\n          return \"null\";\n        }\n\n        // Dot followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\".\")) {\n          state.waitProperty = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for property.\");\n        }\n      }\n\n      // Attempt to match a pipe that precedes a filter\n      if (state.waitPipe) {\n        state.waitPipe = false;\n\n        if (stream.peek() != \"|\") {\n          return \"null\";\n        }\n\n        // Pipe followed by a non-word character should be considered an error.\n        if (stream.match(/\\.\\W+/)) {\n          return \"error\";\n        } else if (stream.eat(\"|\")) {\n          state.waitFilter = true;\n          return \"null\";\n        } else {\n          throw Error (\"Unexpected error while waiting for filter.\");\n        }\n      }\n\n      // Highlight properties\n      if (state.waitProperty) {\n        state.waitProperty = false;\n        if (stream.match(/\\b(\\w+)\\b/)) {\n          state.waitDot = true;  // A property can be followed by another property\n          state.waitPipe = true;  // A property can be followed by a filter\n          return \"property\";\n        }\n      }\n\n      // Highlight filters\n      if (state.waitFilter) {\n          state.waitFilter = false;\n        if (stream.match(filters)) {\n          return \"variable-2\";\n        }\n      }\n\n      // Ignore all white spaces\n      if (stream.eatSpace()) {\n        state.waitProperty = false;\n        return \"null\";\n      }\n\n      // Identify numbers\n      if (stream.match(/\\b\\d+(\\.\\d+)?\\b/)) {\n        return \"number\";\n      }\n\n      // Identify strings\n      if (stream.match(\"'\")) {\n        state.tokenize = inString(\"'\", state.tokenize);\n        return \"string\";\n      } else if (stream.match('\"')) {\n        state.tokenize = inString('\"', state.tokenize);\n        return \"string\";\n      }\n\n      // Attempt to match an operator\n      if (stream.match(operators)) {\n        return \"operator\";\n      }\n\n      // Attempt to match a word operator\n      if (stream.match(wordOperators)) {\n        return \"keyword\";\n      }\n\n      // Attempt to match a keyword\n      var keywordMatch = stream.match(keywords);\n      if (keywordMatch) {\n        if (keywordMatch[0] == \"comment\") {\n          state.blockCommentTag = true;\n        }\n        return \"keyword\";\n      }\n\n      // Attempt to match a variable\n      if (stream.match(/\\b(\\w+)\\b/)) {\n        state.waitDot = true;\n        state.waitPipe = true;  // A property can be followed by a filter\n        return \"variable\";\n      }\n\n      // If found closing tag reset\n      if (stream.match(\"%}\")) {\n        state.waitProperty = null;\n        state.waitFilter = null;\n        state.waitDot = null;\n        state.waitPipe = null;\n        // If the tag that closes is a block comment tag, we want to mark the\n        // following code as comment, until the tag closes.\n        if (state.blockCommentTag) {\n          state.blockCommentTag = false;  // Release the \"lock\"\n          state.tokenize = inBlockComment;\n        } else {\n          state.tokenize = tokenBase;\n        }\n        return \"tag\";\n      }\n\n      // If nothing was found, advance to the next character\n      stream.next();\n      return \"null\";\n    }\n\n    // Mark everything as comment inside the tag and the tag itself.\n    function inComment (stream, state) {\n      if (stream.match(/^.*?#\\}/)) state.tokenize = tokenBase\n      else stream.skipToEnd()\n      return \"comment\";\n    }\n\n    // Mark everything as a comment until the `blockcomment` tag closes.\n    function inBlockComment (stream, state) {\n      if (stream.match(/\\{%\\s*endcomment\\s*%\\}/, false)) {\n        state.tokenize = inTag;\n        stream.match(\"{%\");\n        return \"tag\";\n      } else {\n        stream.next();\n        return \"comment\";\n      }\n    }\n\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"{% comment %}\",\n      blockCommentEnd: \"{% endcomment %}\"\n    };\n  });\n\n  CodeMirror.defineMode(\"django\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var djangoInner = CodeMirror.getMode(config, \"django:inner\");\n    return CodeMirror.overlayMode(htmlBase, djangoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-django\", \"django\");\n});\n"],"sourceRoot":""}