{"version":3,"sources":["../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js","../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js"],"names":["CodeMirror","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","state","chain","parser","tokenize","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","style","terminator","depth","Context","startOfLine","this","prev","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","name","close","xmlCurrentContext","cx","push","reverse","defineMIME","mimeModes","mod","require","defaultTags","script","maybeBackup","pat","cur","search","backUp","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","i","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","getMode","tags","configTags","configScript","scriptTypes","matches","mode","html","htmlState","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","copyState","local","line","innerMode","wordObj","words","o","e","keywordList","keywords","indentWords","dedentWords","opening","closing","curPunc","newtok","tokenBase","readBlockComment","m","readQuoted","regexpAhead","embed","delim","propertyIsEnumerable","skipToEnd","readHereDoc","varList","lastTok","more","start","pos","found","escaped","indexOf","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","unescaped","phrase","mayIndent","continuedLine","kwtype","thisTok","word","firstChar","charAt","ct","closed","lineComment","fold","registerHelper","rubyMode","modes","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","restore","offset","idx","continueLine","stack","parent","finishContinue","lineContinuable","commaContinuable","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","htmlLine","startHtmlLine","lastTokenize","startHtmlMode","comment","commentMode","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","query","factory","startSubMode","doctypeLine","_state","startLine","slimTag","slim","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","blankLine"],"mappings":"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","file":"static/js/15.9dafd07f.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n"],"sourceRoot":""}