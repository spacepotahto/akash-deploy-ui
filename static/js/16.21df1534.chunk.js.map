{"version":3,"sources":["../node_modules/codemirror/addon/mode/simple.js","../node_modules/codemirror/addon/mode/multiplex.js","../node_modules/codemirror/mode/handlebars/handlebars.js"],"names":["CodeMirror","ensureState","states","name","hasOwnProperty","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","asToken","apply","replace","result","i","length","push","Rule","data","next","this","regex","token","tokenFunction","config","stream","state","pending","pend","shift","pos","text","local","end","match","tok","endToken","localState","m","mode","endScan","exec","current","start","index","curState","rule","matches","sol","stack","pop","enterLocalMode","indent","indentation","indentUnit","dedent","j","backUp","join","cmp","a","b","props","prop","spec","pers","persistent","p","persistentStates","getMode","lState","startState","forceEnd","indexOf","arr","indentFunction","meta","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart","slice","defineSimpleMode","defineMode","simpleMode","states_","hasIndentation","list","orig","copyState","s","innerMode","mod","require","multiplexingMode","outer","others","Array","prototype","call","arguments","string","pattern","from","returnEnd","found","innerActive","inner","startingInner","curInner","oldContent","close","parseDelimiters","delimStyle","innerToken","innerStyle","cutOff","Infinity","other","open","outerIndent","possibleOuterIndent","outerToken","blankLine","electricChars","handlebars_raw","handlebars","dash_comment","comment","blockCommentStart","blockCommentEnd","parserConfig","base","defineMIME"],"mappings":"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","file":"static/js/16.21df1534.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n"],"sourceRoot":""}